/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package resources;

public final class mergeType {
  public final static mergeType MRGnone = new mergeType("MRGnone", qhullJNI.MRGnone_get());
  public final static mergeType MRGcoplanar = new mergeType("MRGcoplanar");
  public final static mergeType MRGanglecoplanar = new mergeType("MRGanglecoplanar");
  public final static mergeType MRGconcave = new mergeType("MRGconcave");
  public final static mergeType MRGconcavecoplanar = new mergeType("MRGconcavecoplanar");
  public final static mergeType MRGtwisted = new mergeType("MRGtwisted");
  public final static mergeType MRGflip = new mergeType("MRGflip");
  public final static mergeType MRGdupridge = new mergeType("MRGdupridge");
  public final static mergeType MRGsubridge = new mergeType("MRGsubridge");
  public final static mergeType MRGvertices = new mergeType("MRGvertices");
  public final static mergeType MRGdegen = new mergeType("MRGdegen");
  public final static mergeType MRGredundant = new mergeType("MRGredundant");
  public final static mergeType MRGmirror = new mergeType("MRGmirror");
  public final static mergeType MRGcoplanarhorizon = new mergeType("MRGcoplanarhorizon");
  public final static mergeType ENDmrg = new mergeType("ENDmrg");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static mergeType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + mergeType.class + " with value " + swigValue);
  }

  private mergeType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private mergeType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private mergeType(String swigName, mergeType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static mergeType[] swigValues = { MRGnone, MRGcoplanar, MRGanglecoplanar, MRGconcave, MRGconcavecoplanar, MRGtwisted, MRGflip, MRGdupridge, MRGsubridge, MRGvertices, MRGdegen, MRGredundant, MRGmirror, MRGcoplanarhorizon, ENDmrg };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

